{"version":3,"sources":["components/ListItem.js","components/List.js","action/actionTypes.js","action/updateList.js","reducers/todoListReducer.js","store/index.js","components/App.js","index.js"],"names":["ListItem","props","console","log","handleDelete","className","contentEditable","state","edit","todoItem","value","role","onClick","handleEdit","type","List","addTodos","deleteTodos","editTodos","setContentTodos","setInputTodos","setEditTodos","item","id","htmlFor","listContents","map","NoList","ADD_CONTENT","EDIT_CONTENT","DELETE_CONTENT","SET_CONTENT","SET_INPUT","SET_EDIT","editTodo","content","actionTypes","payload","initialState","input","todoListReducer","action","newContent","Date","now","concat","newContentList","index","indexOf","splice","store","createStore","App","handleChange","e","inputContent","target","handleAddClick","todos","this","onChange","placeholder","length","React","Component","connect","dispatch","deleteTodo","setContent","setInput","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b906ebf.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ListItem = (props) => {\n  // render() {\n  console.log(props.handleDelete, \"kkkk\");\n\n  return (\n    <div className=\"list-group-item list-group-item-action d-flex justify-content-between\">\n      <span contentEditable={props.state.edit}>{props.todoItem.value}</span>\n      <div className=\"btn-group btn-group-sm\" role=\"group\">\n        <button\n          onClick={() => props.handleEdit(props.todoItem)}\n          className=\"btn btn-primary\"\n          type=\"button\"\n        >\n          Update\n        </button>\n        <button\n          onClick={() => props.handleDelete(props.todoItem)}\n          className=\"btn btn-primary\"\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n  // }S\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport ListItem from \"./ListItem\";\n\nconst List = ({\n  state,\n  addTodos,\n  deleteTodos,\n  editTodos,\n  setContentTodos,\n  setInputTodos,\n  setEditTodos,\n}) => {\n  // console.log(state);\n  const handleDelete = (item) => {\n    setContentTodos(item);\n    deleteTodos();\n    console.log(\"handleDelete\");\n  };\n\n  const handleEdit = (item) => {\n    setEditTodos();\n  };\n  return (\n    <div id=\"toDoList\">\n      <label htmlFor=\"basic-input\">\n        <span className=\"text-monospace\">Things ToDo List</span>\n        <br />\n        <span className=\"text-monospace\">Click on item to update:</span>\n      </label>\n      <div className=\"list-group\">\n        {state.listContents.map((item) => (\n          <ListItem\n            key={item.id}\n            todoItem={item}\n            deleteTodos={deleteTodos}\n            addTodos={addTodos}\n            editTodos={editTodos}\n            setContentTodos={setContentTodos}\n            setInputTodos={setInputTodos}\n            setEditTodos={setEditTodos}\n            handleDelete={handleDelete}\n            handleEdit={handleEdit}\n            state={state}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst NoList = () => {\n  return (\n    <div\n      id=\"toDoList\"\n      className=\"d-flex align-items-center justify-content-center\"\n    >\n      <p className=\"text-muted text-monospace mt-5\">Your list is empty</p>\n    </div>\n  );\n};\n\nexport { List, NoList };\n","export const ADD_CONTENT = \"ADD_CONTENT\";\r\nexport const EDIT_CONTENT = \"EDIT_CONTENT\";\r\nexport const DELETE_CONTENT = \"DELETE_CONTENT\";\r\nexport const SET_CONTENT = \"SET_CONTENT\";\r\nexport const SET_INPUT = \"SET_INPUT\";\r\nexport const SET_EDIT = \"SET_EDIT\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addTodo = () => {\r\n  return {\r\n    type: actionTypes.ADD_CONTENT,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (content) => {\r\n  return {\r\n    type: actionTypes.DELETE_CONTENT,\r\n    payload: content,\r\n  };\r\n};\r\n\r\nexport const editTodo = (content) => {\r\n  return {\r\n    type: actionTypes.EDIT_CONTENT,\r\n    payload: content,\r\n  };\r\n};\r\n\r\nexport const setContent = (content) => {\r\n  return {\r\n    type: actionTypes.SET_CONTENT,\r\n    payload: content,\r\n  };\r\n};\r\n\r\nexport const setInput = (inputContent) => {\r\n  return {\r\n    type: actionTypes.SET_INPUT,\r\n    payload: inputContent,\r\n  };\r\n};\r\n\r\nexport const setEdit = () => {\r\n  return {\r\n    type: actionTypes.SET_EDIT,\r\n  };\r\n};\r\n","import * as actionTypes from \"../action/actionTypes\";\r\n\r\nconst initialState = {\r\n  listContents: [{ id: 1, value: \"NY\" }],\r\n  input: \"\",\r\n  content: \"\",\r\n  edit: false,\r\n};\r\n\r\nconst todoListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_CONTENT:\r\n      const newContent = {\r\n        id: Date.now(),\r\n        value: state.input,\r\n      };\r\n      return {\r\n        ...state,\r\n        listContents: state.listContents.concat(newContent),\r\n        input: \"\",\r\n      };\r\n    case actionTypes.EDIT_CONTENT:\r\n      var newContentList = [...state.listContents];\r\n      var index = newContentList.indexOf(state.content);\r\n      if (index !== -1) {\r\n        newContentList[index].value = state.input;\r\n        return {\r\n          ...state,\r\n          listContents: newContentList,\r\n          input: \"\",\r\n          edit: false,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    case actionTypes.DELETE_CONTENT:\r\n      newContentList = [...state.listContents];\r\n      index = newContentList.indexOf(state.content);\r\n      if (index !== -1) {\r\n        newContentList.splice(index, 1);\r\n        return {\r\n          ...state,\r\n          listContents: newContentList,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    case actionTypes.SET_INPUT:\r\n      return {\r\n        ...state,\r\n        input: action.payload,\r\n      };\r\n    case actionTypes.SET_CONTENT:\r\n      return {\r\n        ...state,\r\n        content: action.payload,\r\n      };\r\n    case actionTypes.SET_EDIT:\r\n      return {\r\n        ...state,\r\n        edit: !state.edit,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoListReducer;\r\n","import { createStore } from \"redux\";\r\nimport todoListReducer from \"../reducers/todoListReducer\";\r\n\r\nexport const store = createStore(todoListReducer);\r\n","import React from \"react\";\nimport { List, NoList } from \"./List\";\nimport {\n  addTodo,\n  deleteTodo,\n  editTodo,\n  setContent,\n  setEdit,\n  setInput,\n} from \"../action/updateList\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../store/index\";\n\n// React:\nclass App extends React.Component {\n  handleChange = (e) => {\n    const inputContent = e.target.value;\n    this.props.setInputTodos(inputContent);\n  };\n\n  handleAddClick = () => {\n    if (this.props.todos.input) this.props.addTodos();\n    console.log(\n      \"add clicked\",\n      this.props.todos.content,\n      this.props.todos.input\n    );\n  };\n\n  handleEdit = () => {\n    editTodo();\n  };\n  render() {\n    // console.log(store);\n    console.log(this.props.todos);\n    return (\n      <div id=\"toDoApp\">\n        <label id=\"toDoTitle\" htmlFor=\"basic-input\">\n          <h2 className=\"text-monospace\">Add new things To Do:</h2>\n        </label>\n        <div id=\"toDoAdd\" className=\"input-group\">\n          <input\n            onChange={this.handleChange}\n            id=\"basic-input\"\n            className=\"form-control\"\n            type=\"text\"\n            value={this.props.todos.input}\n            placeholder=\"Thing to do\"\n          />\n          <div className=\"input-group-append\">\n            <button\n              onClick={this.handleAddClick}\n              className=\"btn btn-outline-primary\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n        {this.props.todos.listContents.length ? (\n          <List\n            state={this.props.todos}\n            addTodos={this.props.addTodos}\n            deleteTodos={this.props.deleteTodos}\n            editTodos={this.props.editTodos}\n            setContentTodos={this.props.setContentTodos}\n            setInputTodos={this.props.setInputTodos}\n            setEditTodos={this.props.setEditTodos}\n          />\n        ) : (\n          <NoList />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addTodos: () => dispatch(addTodo()),\n    deleteTodos: (content) => dispatch(deleteTodo(content)),\n    editTodos: (content) => dispatch(editTodo(content)),\n    setContentTodos: (content) => dispatch(setContent(content)),\n    setInputTodos: (inputContent) => dispatch(setInput(inputContent)),\n    setEditTodos: () => dispatch(setEdit()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}